name: docker

on:
  push:
    tags:
      - '*'
    branches:
      - 'main'
    paths:
      - 'go.*'
      - '*.go'
  pull_request:
    branches: [ 'main' ]
    paths:
      - 'go.**'
      - '**.go'
      - '.github/workflows/docker.yaml'
      
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  attestations: write

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  docker:
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push with SBOM and Attestation
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          file: infra/Dockerfile
          push: true
          provenance: true
          sbom: true
          tags: ${{ github.repository }}:${{ github.sha }}-${{ github.run_number }}
      
      -
        name: Attest build provenance
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: docker.io/andreistefanciprian/k8s-toleration-webhook
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true
      -
        name: Export SBOM from image
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE_NAME }} --format '{{ json .SBOM }}' | jq -r '.[]' > sbom.spdx.json
      -
        name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.spdx.json
      -
        name: Add SBOM link to summary
        uses: actions/github-script@v7
        with:
          script: |
            core.summary.addRaw(`**SBOM:** [Download SBOM artifact](./artifacts/sbom.zip)\n`)
            core.summary.write()
